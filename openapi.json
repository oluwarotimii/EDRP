{
    "openapi": "3.1.0",
    "info": {
        "title": "School ERP API",
        "description": "API for School ERP system",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register User",
                "description": "Register a new user.",
                "operationId": "register_user_api_auth_register_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login For Access Token",
                "description": "Authenticate a user and return an access token.",
                "operationId": "login_for_access_token_api_auth_login_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/change-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Change Password",
                "description": "Change user password.",
                "operationId": "change_password_api_auth_change_password_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordChange"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get Current User Info",
                "description": "Get information about the currently authenticated user.",
                "operationId": "get_current_user_info_api_auth_me_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserInDB"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/schools": {
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Register School",
                "description": "Register a new school and create an admin user with a unique join code.",
                "operationId": "register_school_api_schools_post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchoolRegistration"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchoolRegistrationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Schools"
                ],
                "summary": "Get Schools",
                "description": "Get all schools (admin only).",
                "operationId": "get_schools_api_schools_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SchoolInDB"
                                    },
                                    "title": "Response Get Schools Api Schools Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/schools/{school_id}": {
            "get": {
                "tags": [
                    "Schools"
                ],
                "summary": "Get School",
                "description": "Get a specific school by ID.",
                "operationId": "get_school_api_schools__school_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "School Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchoolInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Schools"
                ],
                "summary": "Update School",
                "description": "Update a school (admin only).",
                "operationId": "update_school_api_schools__school_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "School Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchoolUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchoolInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/departments": {
            "post": {
                "tags": [
                    "Schools"
                ],
                "summary": "Create Department",
                "description": "Create a new department.",
                "operationId": "create_department_api_departments_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DepartmentCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Schools"
                ],
                "summary": "Get Departments",
                "description": "Get all departments, optionally filtered by school_id.",
                "operationId": "get_departments_api_departments_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "School Id"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DepartmentInDB"
                                    },
                                    "title": "Response Get Departments Api Departments Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/departments/{department_id}": {
            "get": {
                "tags": [
                    "Schools"
                ],
                "summary": "Get Department",
                "description": "Get a specific department by ID.",
                "operationId": "get_department_api_departments__department_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "department_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Department Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Schools"
                ],
                "summary": "Update Department",
                "description": "Update a department (admin only).",
                "operationId": "update_department_api_departments__department_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "department_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Department Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DepartmentUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/classes": {
            "post": {
                "tags": [
                    "Schools"
                ],
                "summary": "Create Class",
                "description": "Create a new class.",
                "operationId": "create_class_api_classes_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClassCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClassInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Schools"
                ],
                "summary": "Get Classes",
                "description": "Get all classes, optionally filtered by school_id and/or department_id.",
                "operationId": "get_classes_api_classes_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "School Id"
                        }
                    },
                    {
                        "name": "department_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Department Id"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ClassInDB"
                                    },
                                    "title": "Response Get Classes Api Classes Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/classes/{class_id}": {
            "get": {
                "tags": [
                    "Schools"
                ],
                "summary": "Get Class",
                "description": "Get a specific class by ID.",
                "operationId": "get_class_api_classes__class_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "class_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Class Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClassInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Schools"
                ],
                "summary": "Update Class",
                "description": "Update a class (admin only).",
                "operationId": "update_class_api_classes__class_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "class_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Class Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClassUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClassInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects": {
            "post": {
                "tags": [
                    "Schools"
                ],
                "summary": "Create Subject",
                "description": "Create a new subject.",
                "operationId": "create_subject_api_subjects_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubjectCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubjectInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Schools"
                ],
                "summary": "Get Subjects",
                "description": "Get all subjects, optionally filtered by school_id and/or department_id.",
                "operationId": "get_subjects_api_subjects_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "School Id"
                        }
                    },
                    {
                        "name": "department_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Department Id"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SubjectInDB"
                                    },
                                    "title": "Response Get Subjects Api Subjects Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{subject_id}": {
            "get": {
                "tags": [
                    "Schools"
                ],
                "summary": "Get Subject",
                "description": "Get a specific subject by ID.",
                "operationId": "get_subject_api_subjects__subject_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "subject_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Subject Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubjectInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Schools"
                ],
                "summary": "Update Subject",
                "description": "Update a subject (admin only).",
                "operationId": "update_subject_api_subjects__subject_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "subject_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Subject Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubjectUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubjectInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/authentic-locations": {
            "post": {
                "tags": [
                    "Schools"
                ],
                "summary": "Create Authentic Location",
                "description": "Create a new authentic location for GPS verification.",
                "operationId": "create_authentic_location_api_authentic_locations_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthenticLocationCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticLocationInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Schools"
                ],
                "summary": "Get Authentic Locations",
                "description": "Get all authentic locations, optionally filtered by school_id and active status.",
                "operationId": "get_authentic_locations_api_authentic_locations_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "School Id"
                        }
                    },
                    {
                        "name": "active_only",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true,
                            "title": "Active Only"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AuthenticLocationInDB"
                                    },
                                    "title": "Response Get Authentic Locations Api Authentic Locations Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/authentic-locations/{location_id}": {
            "get": {
                "tags": [
                    "Schools"
                ],
                "summary": "Get Authentic Location",
                "description": "Get a specific authentic location by ID.",
                "operationId": "get_authentic_location_api_authentic_locations__location_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Location Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticLocationInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Schools"
                ],
                "summary": "Update Authentic Location",
                "description": "Update an authentic location (admin only).",
                "operationId": "update_authentic_location_api_authentic_locations__location_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Location Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthenticLocationUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticLocationInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/roles": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get Roles",
                "description": "Get all roles.",
                "operationId": "get_roles_api_roles_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/RoleInDB"
                                    },
                                    "type": "array",
                                    "title": "Response Get Roles Api Roles Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create Role",
                "description": "Create a new role (super_admin only).",
                "operationId": "create_role_api_roles_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/roles/{role_id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get Role",
                "description": "Get a specific role by ID.",
                "operationId": "get_role_api_roles__role_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "role_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Role Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update Role",
                "description": "Update a role (super_admin only).",
                "operationId": "update_role_api_roles__role_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "role_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Role Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/permissions": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get Permissions",
                "description": "Get all permissions.",
                "operationId": "get_permissions_api_permissions_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/PermissionInDB"
                                    },
                                    "type": "array",
                                    "title": "Response Get Permissions Api Permissions Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create Permission",
                "description": "Create a new permission (super_admin only).",
                "operationId": "create_permission_api_permissions_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PermissionCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PermissionInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/roles/{role_id}/permissions/{permission_id}": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Assign Permission To Role",
                "description": "Assign a permission to a role (super_admin only).",
                "operationId": "assign_permission_to_role_api_roles__role_id__permissions__permission_id__post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "role_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Role Id"
                        }
                    },
                    {
                        "name": "permission_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Permission Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Remove Permission From Role",
                "description": "Remove a permission from a role (super_admin only).",
                "operationId": "remove_permission_from_role_api_roles__role_id__permissions__permission_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "role_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Role Id"
                        }
                    },
                    {
                        "name": "permission_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Permission Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get Users",
                "description": "Get all users, with optional filtering by school, role, and search term.",
                "operationId": "get_users_api_users_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "School Id"
                        }
                    },
                    {
                        "name": "role_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Role Id"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Search"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserWithRole"
                                    },
                                    "title": "Response Get Users Api Users Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{user_id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get User",
                "description": "Get a specific user by ID.",
                "operationId": "get_user_api_users__user_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserWithRole"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update User",
                "description": "Update a user.",
                "operationId": "update_user_api_users__user_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "User Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete User",
                "description": "Delete a user (admin only).",
                "operationId": "delete_user_api_users__user_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/students": {
            "post": {
                "tags": [
                    "Students"
                ],
                "summary": "Create Student",
                "description": "Create a new student with user account.",
                "operationId": "create_student_api_students_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_create_student_api_students_post"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentWithUser"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Students"
                ],
                "summary": "Get Students",
                "description": "Get all students, with optional filtering.",
                "operationId": "get_students_api_students_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "School Id"
                        }
                    },
                    {
                        "name": "class_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Class Id"
                        }
                    },
                    {
                        "name": "department_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Department Id"
                        }
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Session Id"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Search"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StudentWithUser"
                                    },
                                    "title": "Response Get Students Api Students Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/students/{student_id}": {
            "get": {
                "tags": [
                    "Students"
                ],
                "summary": "Get Student",
                "description": "Get a specific student by ID.",
                "operationId": "get_student_api_students__student_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Student Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentWithUser"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Students"
                ],
                "summary": "Update Student",
                "description": "Update a student.",
                "operationId": "update_student_api_students__student_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Student Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StudentUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentWithUser"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/students/{student_id}/parents/{parent_user_id}": {
            "post": {
                "tags": [
                    "Students"
                ],
                "summary": "Link Parent To Student",
                "description": "Link a parent to a student.",
                "operationId": "link_parent_to_student_api_students__student_id__parents__parent_user_id__post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Student Id"
                        }
                    },
                    {
                        "name": "parent_user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Parent User Id"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Students"
                ],
                "summary": "Unlink Parent From Student",
                "description": "Remove link between a parent and a student.",
                "operationId": "unlink_parent_from_student_api_students__student_id__parents__parent_user_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Student Id"
                        }
                    },
                    {
                        "name": "parent_user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Parent User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/students/{student_id}/parents": {
            "get": {
                "tags": [
                    "Students"
                ],
                "summary": "Get Student Parents",
                "description": "Get all parents linked to a student.",
                "operationId": "get_student_parents_api_students__student_id__parents_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Student Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    },
                                    "title": "Response Get Student Parents Api Students  Student Id  Parents Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/teachers": {
            "post": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Create Teacher",
                "description": "Create a new teacher account.",
                "operationId": "create_teacher_api_teachers_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_create_teacher_api_teachers_post"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserWithRole"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Get Teachers",
                "description": "Get all teachers, with optional filtering.",
                "operationId": "get_teachers_api_teachers_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "School Id"
                        }
                    },
                    {
                        "name": "department_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Department Id"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Search"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserWithRole"
                                    },
                                    "title": "Response Get Teachers Api Teachers Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/teachers/{teacher_id}": {
            "get": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Get Teacher",
                "description": "Get a specific teacher by ID.",
                "operationId": "get_teacher_api_teachers__teacher_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "teacher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Teacher Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserWithRole"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/teachers/assign": {
            "post": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Assign Teacher To Subject Class",
                "description": "Assign a teacher to teach a subject in a class.",
                "operationId": "assign_teacher_to_subject_class_api_teachers_assign_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherSubjectClassCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherSubjectClassInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/teachers/assignments/{teacher_id}/{subject_id}/{class_id}": {
            "delete": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Remove Teacher Assignment",
                "description": "Remove a teacher's assignment to teach a subject in a class.",
                "operationId": "remove_teacher_assignment_api_teachers_assignments__teacher_id___subject_id___class_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "teacher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Teacher Id"
                        }
                    },
                    {
                        "name": "subject_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Subject Id"
                        }
                    },
                    {
                        "name": "class_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Class Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/teachers/{teacher_id}/assignments": {
            "get": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Get Teacher Assignments",
                "description": "Get all subject-class assignments for a teacher.",
                "operationId": "get_teacher_assignments_api_teachers__teacher_id__assignments_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "teacher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Teacher Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    },
                                    "title": "Response Get Teacher Assignments Api Teachers  Teacher Id  Assignments Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/attendance/verify-location": {
            "post": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Verify Attendance Location",
                "description": "Verify if a location is within the authentic zones of a school.",
                "operationId": "verify_attendance_location_api_attendance_verify_location_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GPSVerificationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GPSVerificationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/attendance": {
            "post": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Create Attendance Record",
                "description": "Create a new attendance record for a student.",
                "operationId": "create_attendance_record_api_attendance_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttendanceRecordCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttendanceRecordInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Get Attendance Records",
                "description": "Get attendance records with optional filtering.",
                "operationId": "get_attendance_records_api_attendance_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Student Id"
                        }
                    },
                    {
                        "name": "class_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Class Id"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Start Date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "End Date"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Status"
                        }
                    },
                    {
                        "name": "flagged",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Flagged"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AttendanceRecordInDB"
                                    },
                                    "title": "Response Get Attendance Records Api Attendance Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/attendance/bulk": {
            "post": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Create Bulk Attendance",
                "description": "Create attendance records for multiple students at once.",
                "operationId": "create_bulk_attendance_api_attendance_bulk_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkAttendanceCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AttendanceRecordInDB"
                                    },
                                    "type": "array",
                                    "title": "Response Create Bulk Attendance Api Attendance Bulk Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/attendance/{record_id}": {
            "get": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Get Attendance Record",
                "description": "Get a specific attendance record by ID.",
                "operationId": "get_attendance_record_api_attendance__record_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "record_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Record Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttendanceRecordInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Update Attendance Record",
                "description": "Update an attendance record.",
                "operationId": "update_attendance_record_api_attendance__record_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "record_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Record Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttendanceRecordUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttendanceRecordInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/attendance/statistics/student/{student_id}": {
            "get": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Get Student Attendance Statistics",
                "description": "Get attendance statistics for a specific student.",
                "operationId": "get_student_attendance_statistics_api_attendance_statistics_student__student_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Student Id"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Start Date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "End Date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttendanceStats"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/attendance/statistics/class/{class_id}": {
            "get": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Get Class Attendance Statistics",
                "description": "Get attendance statistics for a class.",
                "operationId": "get_class_attendance_statistics_api_attendance_statistics_class__class_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "class_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Class Id"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Date"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Start Date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "End Date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Get Class Attendance Statistics Api Attendance Statistics Class  Class Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/academic-sessions": {
            "post": {
                "tags": [
                    "Academics"
                ],
                "summary": "Create Academic Session",
                "description": "Create a new academic session.",
                "operationId": "create_academic_session_api_academic_sessions_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AcademicSessionCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AcademicSessionInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Academics"
                ],
                "summary": "Get Academic Sessions",
                "description": "Get all academic sessions, optionally filtered by school.",
                "operationId": "get_academic_sessions_api_academic_sessions_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "School Id"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AcademicSessionInDB"
                                    },
                                    "title": "Response Get Academic Sessions Api Academic Sessions Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/academic-sessions/{session_id}": {
            "get": {
                "tags": [
                    "Academics"
                ],
                "summary": "Get Academic Session",
                "description": "Get a specific academic session by ID.",
                "operationId": "get_academic_session_api_academic_sessions__session_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Session Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AcademicSessionInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Academics"
                ],
                "summary": "Update Academic Session",
                "description": "Update an academic session.",
                "operationId": "update_academic_session_api_academic_sessions__session_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Session Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AcademicSessionUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AcademicSessionInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/terms": {
            "post": {
                "tags": [
                    "Academics"
                ],
                "summary": "Create Term",
                "description": "Create a new term within an academic session.",
                "operationId": "create_term_api_terms_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TermCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Academics"
                ],
                "summary": "Get Terms",
                "description": "Get all terms, optionally filtered by academic session.",
                "operationId": "get_terms_api_terms_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Session Id"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TermInDB"
                                    },
                                    "title": "Response Get Terms Api Terms Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/terms/{term_id}": {
            "get": {
                "tags": [
                    "Academics"
                ],
                "summary": "Get Term",
                "description": "Get a specific term by ID.",
                "operationId": "get_term_api_terms__term_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "term_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Term Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Academics"
                ],
                "summary": "Update Term",
                "description": "Update a term.",
                "operationId": "update_term_api_terms__term_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "term_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Term Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TermUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/assessments": {
            "post": {
                "tags": [
                    "Academics"
                ],
                "summary": "Create Assessment",
                "description": "Create a new assessment for a term.",
                "operationId": "create_assessment_api_assessments_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssessmentCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssessmentInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Academics"
                ],
                "summary": "Get Assessments",
                "description": "Get all assessments, optionally filtered by school and/or term.",
                "operationId": "get_assessments_api_assessments_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "School Id"
                        }
                    },
                    {
                        "name": "term_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Term Id"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AssessmentInDB"
                                    },
                                    "title": "Response Get Assessments Api Assessments Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/assessments/{assessment_id}": {
            "get": {
                "tags": [
                    "Academics"
                ],
                "summary": "Get Assessment",
                "description": "Get a specific assessment by ID.",
                "operationId": "get_assessment_api_assessments__assessment_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "assessment_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Assessment Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssessmentInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Academics"
                ],
                "summary": "Update Assessment",
                "description": "Update an assessment.",
                "operationId": "update_assessment_api_assessments__assessment_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "assessment_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Assessment Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssessmentUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssessmentInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scores": {
            "post": {
                "tags": [
                    "Academics"
                ],
                "summary": "Create Student Score",
                "description": "Record a score for a student in an assessment.",
                "operationId": "create_student_score_api_scores_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StudentAssessmentScoreCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentAssessmentScoreInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Academics"
                ],
                "summary": "Get Student Scores",
                "description": "Get student assessment scores with optional filtering.",
                "operationId": "get_student_scores_api_scores_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Student Id"
                        }
                    },
                    {
                        "name": "assessment_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Assessment Id"
                        }
                    },
                    {
                        "name": "subject_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Subject Id"
                        }
                    },
                    {
                        "name": "class_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Class Id"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StudentAssessmentScoreInDB"
                                    },
                                    "title": "Response Get Student Scores Api Scores Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scores/batch": {
            "post": {
                "tags": [
                    "Academics"
                ],
                "summary": "Create Batch Scores",
                "description": "Record multiple scores in a batch operation.",
                "operationId": "create_batch_scores_api_scores_batch_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/StudentAssessmentScoreCreate"
                                },
                                "type": "array",
                                "title": "Scores"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/StudentAssessmentScoreInDB"
                                    },
                                    "type": "array",
                                    "title": "Response Create Batch Scores Api Scores Batch Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/scores/{score_id}": {
            "put": {
                "tags": [
                    "Academics"
                ],
                "summary": "Update Student Score",
                "description": "Update a student's assessment score.",
                "operationId": "update_student_score_api_scores__score_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "score_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Score Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StudentAssessmentScoreUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentAssessmentScoreInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reports/student/{student_id}/term/{term_id}": {
            "get": {
                "tags": [
                    "Academics"
                ],
                "summary": "Get Student Report Card",
                "description": "Generate a report card for a student for a specific term.",
                "operationId": "get_student_report_card_api_reports_student__student_id__term__term_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Student Id"
                        }
                    },
                    {
                        "name": "term_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Term Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportCard"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/fee-types": {
            "post": {
                "tags": [
                    "Finance"
                ],
                "summary": "Create Fee Type",
                "description": "Create a new fee type.",
                "operationId": "create_fee_type_api_fee_types_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FeeTypeCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeeTypeInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Finance"
                ],
                "summary": "Get Fee Types",
                "description": "Get all fee types, optionally filtered by school.",
                "operationId": "get_fee_types_api_fee_types_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "School Id"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FeeTypeInDB"
                                    },
                                    "title": "Response Get Fee Types Api Fee Types Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/fee-types/{fee_type_id}": {
            "get": {
                "tags": [
                    "Finance"
                ],
                "summary": "Get Fee Type",
                "description": "Get a specific fee type by ID.",
                "operationId": "get_fee_type_api_fee_types__fee_type_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "fee_type_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Fee Type Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeeTypeInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Finance"
                ],
                "summary": "Update Fee Type",
                "description": "Update a fee type.",
                "operationId": "update_fee_type_api_fee_types__fee_type_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "fee_type_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Fee Type Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FeeTypeUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeeTypeInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/student-fees": {
            "post": {
                "tags": [
                    "Finance"
                ],
                "summary": "Create Student Fee",
                "description": "Assign a fee to a student.",
                "operationId": "create_student_fee_api_student_fees_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StudentFeeCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentFeeInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Finance"
                ],
                "summary": "Get Student Fees",
                "description": "Get student fees with optional filtering.",
                "operationId": "get_student_fees_api_student_fees_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Student Id"
                        }
                    },
                    {
                        "name": "fee_type_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Fee Type Id"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Status"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StudentFeeInDB"
                                    },
                                    "title": "Response Get Student Fees Api Student Fees Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/student-fees/bulk": {
            "post": {
                "tags": [
                    "Finance"
                ],
                "summary": "Create Bulk Student Fees",
                "description": "Assign a fee to multiple students at once.",
                "operationId": "create_bulk_student_fees_api_student_fees_bulk_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_create_bulk_student_fees_api_student_fees_bulk_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/StudentFeeInDB"
                                    },
                                    "type": "array",
                                    "title": "Response Create Bulk Student Fees Api Student Fees Bulk Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/student-fees/{fee_id}": {
            "get": {
                "tags": [
                    "Finance"
                ],
                "summary": "Get Student Fee",
                "description": "Get a specific student fee by ID.",
                "operationId": "get_student_fee_api_student_fees__fee_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "fee_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Fee Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentFeeInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Finance"
                ],
                "summary": "Update Student Fee",
                "description": "Update a student fee.",
                "operationId": "update_student_fee_api_student_fees__fee_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "fee_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Fee Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StudentFeeUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentFeeInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/student-fees/summary/{student_id}": {
            "get": {
                "tags": [
                    "Finance"
                ],
                "summary": "Get Fee Summary",
                "description": "Get a summary of fees for a student.",
                "operationId": "get_fee_summary_api_student_fees_summary__student_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Student Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeeSummary"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/payments": {
            "post": {
                "tags": [
                    "Finance"
                ],
                "summary": "Create Payment",
                "description": "Record a manual payment for a student fee.",
                "operationId": "create_payment_api_payments_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Finance"
                ],
                "summary": "Get Payments",
                "description": "Get payments with optional filtering.",
                "operationId": "get_payments_api_payments_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "student_fee_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Student Fee Id"
                        }
                    },
                    {
                        "name": "student_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Student Id"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PaymentInDB"
                                    },
                                    "title": "Response Get Payments Api Payments Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/payments/paystack/initialize": {
            "post": {
                "tags": [
                    "Finance"
                ],
                "summary": "Initialize Paystack Payment",
                "description": "Initialize a payment transaction with Paystack.",
                "operationId": "initialize_paystack_payment_api_payments_paystack_initialize_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaystackPaymentInit"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaystackPaymentResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/payments/paystack/verify": {
            "post": {
                "tags": [
                    "Finance"
                ],
                "summary": "Verify Paystack Payment",
                "description": "Verify a Paystack payment and update the student fee accordingly.",
                "operationId": "verify_paystack_payment_api_payments_paystack_verify_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentVerification"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentVerificationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/messages": {
            "post": {
                "tags": [
                    "Communication"
                ],
                "summary": "Create Message",
                "description": "Send a new message.",
                "operationId": "create_message_api_messages_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Get Messages",
                "description": "Get messages for the current user, optionally filtered by conversation partner.",
                "operationId": "get_messages_api_messages_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "with_user_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "User ID to filter conversations",
                            "title": "With User Id"
                        },
                        "description": "User ID to filter conversations"
                    },
                    {
                        "name": "unread_only",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "Filter to only unread messages",
                            "default": false,
                            "title": "Unread Only"
                        },
                        "description": "Filter to only unread messages"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MessageInDB"
                                    },
                                    "title": "Response Get Messages Api Messages Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/messages/{message_id}/read": {
            "put": {
                "tags": [
                    "Communication"
                ],
                "summary": "Mark Message As Read",
                "description": "Mark a message as read.",
                "operationId": "mark_message_as_read_api_messages__message_id__read_put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Message Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/messages/unread-count": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Get Unread Message Count",
                "description": "Get the count of unread messages for the current user.",
                "operationId": "get_unread_message_count_api_messages_unread_count_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Get Unread Message Count Api Messages Unread Count Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/behavior-reports": {
            "post": {
                "tags": [
                    "Communication"
                ],
                "summary": "Create Behavior Report",
                "description": "Create a new behavior report for a student.",
                "operationId": "create_behavior_report_api_behavior_reports_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BehaviorReportCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BehaviorReportInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Get Behavior Reports",
                "description": "Get behavior reports with optional filtering.",
                "operationId": "get_behavior_reports_api_behavior_reports_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Student Id"
                        }
                    },
                    {
                        "name": "reported_by_user_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Reported By User Id"
                        }
                    },
                    {
                        "name": "behavior_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Behavior Type"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BehaviorReportInDB"
                                    },
                                    "title": "Response Get Behavior Reports Api Behavior Reports Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/behavior-reports/{report_id}": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Get Behavior Report",
                "description": "Get a specific behavior report by ID.",
                "operationId": "get_behavior_report_api_behavior_reports__report_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "report_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Report Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BehaviorReportInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Communication"
                ],
                "summary": "Update Behavior Report",
                "description": "Update a behavior report.",
                "operationId": "update_behavior_report_api_behavior_reports__report_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "report_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Report Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BehaviorReportUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BehaviorReportInDB"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/audit-logs": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Get Audit Logs",
                "description": "Get audit logs with optional filtering (admin only).",
                "operationId": "get_audit_logs_api_audit_logs_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "User Id"
                        }
                    },
                    {
                        "name": "entity_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Entity Type"
                        }
                    },
                    {
                        "name": "entity_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Entity Id"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Action"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Start Date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "End Date"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AuditLogInDB"
                                    },
                                    "title": "Response Get Audit Logs Api Audit Logs Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/parents/{parent_id}/children": {
            "get": {
                "tags": [
                    "Parents"
                ],
                "summary": "Get Parent Children",
                "description": "Get all children linked to a parent.",
                "operationId": "get_parent_children_api_parents__parent_id__children_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "parent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Parent Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParentChildrenResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/parents/{parent_id}/summary": {
            "get": {
                "tags": [
                    "Parents"
                ],
                "summary": "Get Parent Children Summary",
                "description": "Get a summary of all children linked to a parent, including attendance, fees, and academic performance.",
                "operationId": "get_parent_children_summary_api_parents__parent_id__summary_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "parent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Parent Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParentChildrenSummaryResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/students/{student_id}/custom-fields": {
            "post": {
                "tags": [
                    "Custom Fields"
                ],
                "summary": "Create Student Custom Field",
                "description": "Create a new custom field for a student.",
                "operationId": "create_student_custom_field_api_students__student_id__custom_fields_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Student Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StudentCustomFieldCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentCustomFieldResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Custom Fields"
                ],
                "summary": "Get Student Custom Fields",
                "description": "Get all custom fields for a student.",
                "operationId": "get_student_custom_fields_api_students__student_id__custom_fields_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Student Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StudentCustomFieldResponse"
                                    },
                                    "title": "Response Get Student Custom Fields Api Students  Student Id  Custom Fields Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/students/{student_id}/custom-fields/{field_key}": {
            "put": {
                "tags": [
                    "Custom Fields"
                ],
                "summary": "Update Student Custom Field",
                "description": "Update a custom field for a student.",
                "operationId": "update_student_custom_field_api_students__student_id__custom_fields__field_key__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Student Id"
                        }
                    },
                    {
                        "name": "field_key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Field Key"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StudentCustomFieldUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentCustomFieldResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Custom Fields"
                ],
                "summary": "Delete Student Custom Field",
                "description": "Delete a custom field for a student.",
                "operationId": "delete_student_custom_field_api_students__student_id__custom_fields__field_key__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Student Id"
                        }
                    },
                    {
                        "name": "field_key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Field Key"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/announcements": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Create Announcement",
                "description": "Create a new announcement for a school, class, department, or specific user.",
                "operationId": "create_announcement_api_announcements_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnnouncementCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnnouncementResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get Announcements",
                "description": "Get all announcements, optionally filtered by audience type and ID.",
                "operationId": "get_announcements_api_announcements_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "audience_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/AudienceType"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Audience Type"
                        }
                    },
                    {
                        "name": "audience_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Audience Id"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AnnouncementResponse"
                                    },
                                    "title": "Response Get Announcements Api Announcements Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/announcements/{announcement_id}": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get Announcement",
                "description": "Get a specific announcement by ID.",
                "operationId": "get_announcement_api_announcements__announcement_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "announcement_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Announcement Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnnouncementResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Update Announcement",
                "description": "Update an announcement.",
                "operationId": "update_announcement_api_announcements__announcement_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "announcement_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Announcement Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnnouncementUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnnouncementResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Delete Announcement",
                "description": "Delete an announcement.",
                "operationId": "delete_announcement_api_announcements__announcement_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "announcement_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Announcement Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/notifications": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Create Notification",
                "description": "Create a new notification for a user.",
                "operationId": "create_notification_api_notifications_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/notifications/user/{user_id}": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get User Notifications",
                "description": "Get notifications for a specific user.",
                "operationId": "get_user_notifications_api_notifications_user__user_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "User Id"
                        }
                    },
                    {
                        "name": "unread_only",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Unread Only"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NotificationResponse"
                                    },
                                    "title": "Response Get User Notifications Api Notifications User  User Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/notifications/{notification_id}/mark-read": {
            "put": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark Notification As Read",
                "description": "Mark a notification as read.",
                "operationId": "mark_notification_as_read_api_notifications__notification_id__mark_read_put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "notification_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "Notification Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/notifications/user/{user_id}/count": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get Notification Count",
                "description": "Get the count of total and unread notifications for a user.",
                "operationId": "get_notification_count_api_notifications_user__user_id__count_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationCount"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/join-school": {
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Join School",
                "description": "Allow teachers/staff to join a school using a join code.",
                "operationId": "join_school_api_join_school_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JoinSchoolRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JoinSchoolResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/pending": {
            "get": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Get Pending Users",
                "description": "Get all pending users for the admin's school.",
                "operationId": "get_pending_users_api_users_pending_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/PendingUserResponse"
                                    },
                                    "type": "array",
                                    "title": "Response Get Pending Users Api Users Pending Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/users/{user_id}/approve": {
            "put": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Approve Or Reject User",
                "description": "Approve or reject a pending user.",
                "operationId": "approve_or_reject_user_api_users__user_id__approve_put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "User Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserApprovalAction"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PendingUserResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/schools/{school_id}/regenerate-code": {
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Regenerate Join Code",
                "description": "Generate a new join code for a school.",
                "operationId": "regenerate_join_code_api_schools__school_id__regenerate_code_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "title": "School Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegenerateCodeResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "tags": [
                    "Root"
                ],
                "summary": "Root",
                "operationId": "root__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AcademicSessionCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "start_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Start Date"
                    },
                    "end_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "End Date"
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "school_id"
                ],
                "title": "AcademicSessionCreate"
            },
            "AcademicSessionInDB": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "start_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Start Date"
                    },
                    "end_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "End Date"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "school_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "AcademicSessionInDB"
            },
            "AcademicSessionUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "start_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Start Date"
                    },
                    "end_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "End Date"
                    }
                },
                "type": "object",
                "title": "AcademicSessionUpdate"
            },
            "AdminRegistration": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8,
                        "title": "Password"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "title": "AdminRegistration"
            },
            "AnnouncementCreate": {
                "properties": {
                    "title": {
                        "type": "string",
                        "title": "Title"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "audience_type": {
                        "$ref": "#/components/schemas/AudienceType"
                    },
                    "audience_id": {
                        "type": "integer",
                        "title": "Audience Id"
                    }
                },
                "type": "object",
                "required": [
                    "title",
                    "message",
                    "audience_type",
                    "audience_id"
                ],
                "title": "AnnouncementCreate"
            },
            "AnnouncementResponse": {
                "properties": {
                    "title": {
                        "type": "string",
                        "title": "Title"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "audience_type": {
                        "$ref": "#/components/schemas/AudienceType"
                    },
                    "audience_id": {
                        "type": "integer",
                        "title": "Audience Id"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "created_by_user_id": {
                        "type": "integer",
                        "title": "Created By User Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "title",
                    "message",
                    "audience_type",
                    "audience_id",
                    "id",
                    "created_by_user_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "AnnouncementResponse"
            },
            "AnnouncementUpdate": {
                "properties": {
                    "title": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Title"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    }
                },
                "type": "object",
                "title": "AnnouncementUpdate"
            },
            "AssessmentCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "max_score": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Max Score"
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    },
                    "term_id": {
                        "type": "integer",
                        "title": "Term Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "max_score",
                    "school_id",
                    "term_id"
                ],
                "title": "AssessmentCreate"
            },
            "AssessmentInDB": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "max_score": {
                        "type": "string",
                        "title": "Max Score"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    },
                    "term_id": {
                        "type": "integer",
                        "title": "Term Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "max_score",
                    "id",
                    "school_id",
                    "term_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "AssessmentInDB"
            },
            "AssessmentUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "max_score": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Score"
                    }
                },
                "type": "object",
                "title": "AssessmentUpdate"
            },
            "AttendanceRecordCreate": {
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "title": "Date"
                    },
                    "status": {
                        "$ref": "#/components/schemas/AttendanceStatusEnum"
                    },
                    "latitude": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Latitude"
                    },
                    "longitude": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Longitude"
                    },
                    "student_id": {
                        "type": "integer",
                        "title": "Student Id"
                    },
                    "class_id": {
                        "type": "integer",
                        "title": "Class Id"
                    },
                    "marked_by_user_id": {
                        "type": "integer",
                        "title": "Marked By User Id"
                    }
                },
                "type": "object",
                "required": [
                    "date",
                    "status",
                    "student_id",
                    "class_id",
                    "marked_by_user_id"
                ],
                "title": "AttendanceRecordCreate"
            },
            "AttendanceRecordInDB": {
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "title": "Date"
                    },
                    "status": {
                        "$ref": "#/components/schemas/AttendanceStatusEnum"
                    },
                    "latitude": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Latitude"
                    },
                    "longitude": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Longitude"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "student_id": {
                        "type": "integer",
                        "title": "Student Id"
                    },
                    "class_id": {
                        "type": "integer",
                        "title": "Class Id"
                    },
                    "marked_by_user_id": {
                        "type": "integer",
                        "title": "Marked By User Id"
                    },
                    "flagged": {
                        "type": "boolean",
                        "title": "Flagged"
                    },
                    "flagged_reason": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Flagged Reason"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "date",
                    "status",
                    "id",
                    "student_id",
                    "class_id",
                    "marked_by_user_id",
                    "flagged",
                    "created_at"
                ],
                "title": "AttendanceRecordInDB"
            },
            "AttendanceRecordUpdate": {
                "properties": {
                    "status": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AttendanceStatusEnum"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "flagged": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Flagged"
                    },
                    "flagged_reason": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Flagged Reason"
                    }
                },
                "type": "object",
                "title": "AttendanceRecordUpdate"
            },
            "AttendanceStats": {
                "properties": {
                    "total_days": {
                        "type": "integer",
                        "title": "Total Days"
                    },
                    "present_days": {
                        "type": "integer",
                        "title": "Present Days"
                    },
                    "absent_days": {
                        "type": "integer",
                        "title": "Absent Days"
                    },
                    "late_days": {
                        "type": "integer",
                        "title": "Late Days"
                    },
                    "excused_days": {
                        "type": "integer",
                        "title": "Excused Days"
                    },
                    "attendance_percentage": {
                        "type": "number",
                        "title": "Attendance Percentage"
                    }
                },
                "type": "object",
                "required": [
                    "total_days",
                    "present_days",
                    "absent_days",
                    "late_days",
                    "excused_days",
                    "attendance_percentage"
                ],
                "title": "AttendanceStats"
            },
            "AttendanceStatusEnum": {
                "type": "string",
                "enum": [
                    "Present",
                    "Absent",
                    "Late",
                    "Excused"
                ],
                "title": "AttendanceStatusEnum"
            },
            "AudienceType": {
                "type": "string",
                "enum": [
                    "school",
                    "class",
                    "department",
                    "user"
                ],
                "title": "AudienceType"
            },
            "AuditLogInDB": {
                "properties": {
                    "action": {
                        "type": "string",
                        "title": "Action"
                    },
                    "entity_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Entity Type"
                    },
                    "entity_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Entity Id"
                    },
                    "ip_address": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ip Address"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Id"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "id",
                    "timestamp"
                ],
                "title": "AuditLogInDB"
            },
            "AuthenticLocationCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "latitude": {
                        "type": "number",
                        "title": "Latitude"
                    },
                    "longitude": {
                        "type": "number",
                        "title": "Longitude"
                    },
                    "radius_meters": {
                        "type": "integer",
                        "title": "Radius Meters",
                        "default": 100
                    },
                    "active": {
                        "type": "boolean",
                        "title": "Active",
                        "default": true
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "latitude",
                    "longitude",
                    "school_id"
                ],
                "title": "AuthenticLocationCreate"
            },
            "AuthenticLocationInDB": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "latitude": {
                        "type": "number",
                        "title": "Latitude"
                    },
                    "longitude": {
                        "type": "number",
                        "title": "Longitude"
                    },
                    "radius_meters": {
                        "type": "integer",
                        "title": "Radius Meters",
                        "default": 100
                    },
                    "active": {
                        "type": "boolean",
                        "title": "Active",
                        "default": true
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "latitude",
                    "longitude",
                    "id",
                    "school_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "AuthenticLocationInDB"
            },
            "AuthenticLocationUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "latitude": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Latitude"
                    },
                    "longitude": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Longitude"
                    },
                    "radius_meters": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Radius Meters"
                    },
                    "active": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Active"
                    }
                },
                "type": "object",
                "title": "AuthenticLocationUpdate"
            },
            "BehaviorReportCreate": {
                "properties": {
                    "behavior_type": {
                        "type": "string",
                        "title": "Behavior Type"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "action_taken": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Action Taken"
                    },
                    "student_id": {
                        "type": "integer",
                        "title": "Student Id"
                    },
                    "reported_by_user_id": {
                        "type": "integer",
                        "title": "Reported By User Id"
                    }
                },
                "type": "object",
                "required": [
                    "behavior_type",
                    "student_id",
                    "reported_by_user_id"
                ],
                "title": "BehaviorReportCreate"
            },
            "BehaviorReportInDB": {
                "properties": {
                    "behavior_type": {
                        "type": "string",
                        "title": "Behavior Type"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "action_taken": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Action Taken"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "student_id": {
                        "type": "integer",
                        "title": "Student Id"
                    },
                    "reported_by_user_id": {
                        "type": "integer",
                        "title": "Reported By User Id"
                    },
                    "report_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Report Date"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "behavior_type",
                    "id",
                    "student_id",
                    "reported_by_user_id",
                    "report_date",
                    "created_at"
                ],
                "title": "BehaviorReportInDB"
            },
            "BehaviorReportUpdate": {
                "properties": {
                    "behavior_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Behavior Type"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "action_taken": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Action Taken"
                    }
                },
                "type": "object",
                "title": "BehaviorReportUpdate"
            },
            "Body_create_bulk_student_fees_api_student_fees_bulk_post": {
                "properties": {
                    "student_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Student Ids"
                    },
                    "fee_type_id": {
                        "type": "integer",
                        "title": "Fee Type Id"
                    },
                    "amount_due": {
                        "type": "number",
                        "title": "Amount Due"
                    },
                    "due_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Due Date"
                    }
                },
                "type": "object",
                "required": [
                    "student_ids",
                    "fee_type_id",
                    "amount_due"
                ],
                "title": "Body_create_bulk_student_fees_api_student_fees_bulk_post"
            },
            "Body_create_student_api_students_post": {
                "properties": {
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    },
                    "full_name": {
                        "type": "string",
                        "title": "Full Name"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "date_of_birth": {
                        "type": "string",
                        "title": "Date Of Birth"
                    },
                    "gender": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Gender"
                    },
                    "class_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Class Id"
                    },
                    "department_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Department Id"
                    },
                    "session_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Session Id"
                    },
                    "phone": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone"
                    },
                    "photo": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Photo"
                    }
                },
                "type": "object",
                "required": [
                    "school_id",
                    "full_name",
                    "email",
                    "date_of_birth"
                ],
                "title": "Body_create_student_api_students_post"
            },
            "Body_create_teacher_api_teachers_post": {
                "properties": {
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    },
                    "full_name": {
                        "type": "string",
                        "title": "Full Name"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "phone": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone"
                    },
                    "department_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Department Id"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    },
                    "profile_photo": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "binary"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profile Photo"
                    }
                },
                "type": "object",
                "required": [
                    "school_id",
                    "full_name",
                    "email",
                    "password"
                ],
                "title": "Body_create_teacher_api_teachers_post"
            },
            "BulkAttendanceCreate": {
                "properties": {
                    "class_id": {
                        "type": "integer",
                        "title": "Class Id"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "title": "Date"
                    },
                    "marked_by_user_id": {
                        "type": "integer",
                        "title": "Marked By User Id"
                    },
                    "latitude": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Latitude"
                    },
                    "longitude": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Longitude"
                    },
                    "records": {
                        "items": {
                            "$ref": "#/components/schemas/BulkAttendanceRecord"
                        },
                        "type": "array",
                        "title": "Records"
                    }
                },
                "type": "object",
                "required": [
                    "class_id",
                    "date",
                    "marked_by_user_id",
                    "records"
                ],
                "title": "BulkAttendanceCreate"
            },
            "BulkAttendanceRecord": {
                "properties": {
                    "student_id": {
                        "type": "integer",
                        "title": "Student Id"
                    },
                    "status": {
                        "$ref": "#/components/schemas/AttendanceStatusEnum"
                    }
                },
                "type": "object",
                "required": [
                    "student_id",
                    "status"
                ],
                "title": "BulkAttendanceRecord"
            },
            "ChildSummary": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "class_name": {
                        "type": "string",
                        "title": "Class Name"
                    },
                    "attendance_rate": {
                        "type": "number",
                        "title": "Attendance Rate"
                    },
                    "fee_balance": {
                        "type": "number",
                        "title": "Fee Balance"
                    },
                    "average_score": {
                        "type": "number",
                        "title": "Average Score"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "class_name",
                    "attendance_rate",
                    "fee_balance",
                    "average_score"
                ],
                "title": "ChildSummary"
            },
            "ClassCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "department_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Department Id"
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "school_id"
                ],
                "title": "ClassCreate"
            },
            "ClassInDB": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "department_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Department Id"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "school_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "ClassInDB"
            },
            "ClassUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "department_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Department Id"
                    }
                },
                "type": "object",
                "title": "ClassUpdate"
            },
            "DepartmentCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "school_id"
                ],
                "title": "DepartmentCreate"
            },
            "DepartmentInDB": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "school_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "DepartmentInDB"
            },
            "DepartmentUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    }
                },
                "type": "object",
                "title": "DepartmentUpdate"
            },
            "FeeStatusEnum": {
                "type": "string",
                "enum": [
                    "pending",
                    "partial",
                    "paid",
                    "overdue"
                ],
                "title": "FeeStatusEnum"
            },
            "FeeSummary": {
                "properties": {
                    "total_due": {
                        "type": "number",
                        "title": "Total Due"
                    },
                    "total_paid": {
                        "type": "number",
                        "title": "Total Paid"
                    },
                    "total_balance": {
                        "type": "number",
                        "title": "Total Balance"
                    },
                    "payment_status": {
                        "$ref": "#/components/schemas/FeeStatusEnum"
                    }
                },
                "type": "object",
                "required": [
                    "total_due",
                    "total_paid",
                    "total_balance",
                    "payment_status"
                ],
                "title": "FeeSummary"
            },
            "FeeTypeCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "amount": {
                        "anyOf": [
                            {
                                "type": "number",
                                "exclusiveMinimum": 0.0
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Amount"
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "amount",
                    "school_id"
                ],
                "title": "FeeTypeCreate"
            },
            "FeeTypeInDB": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "amount": {
                        "type": "string",
                        "title": "Amount"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "amount",
                    "id",
                    "school_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "FeeTypeInDB"
            },
            "FeeTypeUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "amount": {
                        "anyOf": [
                            {
                                "type": "number",
                                "exclusiveMinimum": 0.0
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Amount"
                    }
                },
                "type": "object",
                "title": "FeeTypeUpdate"
            },
            "GPSVerificationRequest": {
                "properties": {
                    "latitude": {
                        "type": "number",
                        "title": "Latitude"
                    },
                    "longitude": {
                        "type": "number",
                        "title": "Longitude"
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    }
                },
                "type": "object",
                "required": [
                    "latitude",
                    "longitude",
                    "school_id"
                ],
                "title": "GPSVerificationRequest"
            },
            "GPSVerificationResponse": {
                "properties": {
                    "is_valid": {
                        "type": "boolean",
                        "title": "Is Valid"
                    },
                    "distance": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Distance"
                    },
                    "location_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Location Name"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "is_valid",
                    "message"
                ],
                "title": "GPSVerificationResponse"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "JoinSchoolRequest": {
                "properties": {
                    "join_code": {
                        "type": "string",
                        "maxLength": 5,
                        "minLength": 5,
                        "title": "Join Code"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8,
                        "title": "Password"
                    }
                },
                "type": "object",
                "required": [
                    "join_code",
                    "name",
                    "email",
                    "password"
                ],
                "title": "JoinSchoolRequest"
            },
            "JoinSchoolResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "user_id": {
                        "type": "integer",
                        "title": "User Id"
                    }
                },
                "type": "object",
                "required": [
                    "message",
                    "user_id"
                ],
                "title": "JoinSchoolResponse"
            },
            "LoginRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "title": "LoginRequest"
            },
            "MessageCreate": {
                "properties": {
                    "content": {
                        "type": "string",
                        "title": "Content"
                    },
                    "attachment_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Attachment Url"
                    },
                    "is_group_message": {
                        "type": "boolean",
                        "title": "Is Group Message",
                        "default": false
                    },
                    "sender_user_id": {
                        "type": "integer",
                        "title": "Sender User Id"
                    },
                    "receiver_user_id": {
                        "type": "integer",
                        "title": "Receiver User Id"
                    }
                },
                "type": "object",
                "required": [
                    "content",
                    "sender_user_id",
                    "receiver_user_id"
                ],
                "title": "MessageCreate"
            },
            "MessageInDB": {
                "properties": {
                    "content": {
                        "type": "string",
                        "title": "Content"
                    },
                    "attachment_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Attachment Url"
                    },
                    "is_group_message": {
                        "type": "boolean",
                        "title": "Is Group Message",
                        "default": false
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "sender_user_id": {
                        "type": "integer",
                        "title": "Sender User Id"
                    },
                    "receiver_user_id": {
                        "type": "integer",
                        "title": "Receiver User Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "read_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Read At"
                    }
                },
                "type": "object",
                "required": [
                    "content",
                    "id",
                    "sender_user_id",
                    "receiver_user_id",
                    "created_at"
                ],
                "title": "MessageInDB"
            },
            "NotificationCount": {
                "properties": {
                    "total": {
                        "type": "integer",
                        "title": "Total"
                    },
                    "unread": {
                        "type": "integer",
                        "title": "Unread"
                    }
                },
                "type": "object",
                "required": [
                    "total",
                    "unread"
                ],
                "title": "NotificationCount"
            },
            "NotificationCreate": {
                "properties": {
                    "title": {
                        "type": "string",
                        "title": "Title"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "related_entity_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Related Entity Type"
                    },
                    "related_entity_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Related Entity Id"
                    },
                    "user_id": {
                        "type": "integer",
                        "title": "User Id"
                    }
                },
                "type": "object",
                "required": [
                    "title",
                    "message",
                    "user_id"
                ],
                "title": "NotificationCreate"
            },
            "NotificationResponse": {
                "properties": {
                    "title": {
                        "type": "string",
                        "title": "Title"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "related_entity_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Related Entity Type"
                    },
                    "related_entity_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Related Entity Id"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "user_id": {
                        "type": "integer",
                        "title": "User Id"
                    },
                    "is_read": {
                        "type": "boolean",
                        "title": "Is Read"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "title",
                    "message",
                    "id",
                    "user_id",
                    "is_read",
                    "created_at"
                ],
                "title": "NotificationResponse"
            },
            "ParentChildrenResponse": {
                "properties": {
                    "children": {
                        "items": {
                            "$ref": "#/components/schemas/StudentResponse"
                        },
                        "type": "array",
                        "title": "Children"
                    }
                },
                "type": "object",
                "required": [
                    "children"
                ],
                "title": "ParentChildrenResponse"
            },
            "ParentChildrenSummaryResponse": {
                "properties": {
                    "children": {
                        "items": {
                            "$ref": "#/components/schemas/ChildSummary"
                        },
                        "type": "array",
                        "title": "Children"
                    }
                },
                "type": "object",
                "required": [
                    "children"
                ],
                "title": "ParentChildrenSummaryResponse"
            },
            "PasswordChange": {
                "properties": {
                    "old_password": {
                        "type": "string",
                        "title": "Old Password"
                    },
                    "new_password": {
                        "type": "string",
                        "minLength": 8,
                        "title": "New Password"
                    }
                },
                "type": "object",
                "required": [
                    "old_password",
                    "new_password"
                ],
                "title": "PasswordChange"
            },
            "PaymentCreate": {
                "properties": {
                    "amount": {
                        "anyOf": [
                            {
                                "type": "number",
                                "exclusiveMinimum": 0.0
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Amount"
                    },
                    "payment_method": {
                        "$ref": "#/components/schemas/PaymentMethodEnum"
                    },
                    "payment_reference": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Payment Reference"
                    },
                    "student_fee_id": {
                        "type": "integer",
                        "title": "Student Fee Id"
                    }
                },
                "type": "object",
                "required": [
                    "amount",
                    "payment_method",
                    "student_fee_id"
                ],
                "title": "PaymentCreate"
            },
            "PaymentInDB": {
                "properties": {
                    "amount": {
                        "type": "string",
                        "title": "Amount"
                    },
                    "payment_method": {
                        "$ref": "#/components/schemas/PaymentMethodEnum"
                    },
                    "payment_reference": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Payment Reference"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "student_fee_id": {
                        "type": "integer",
                        "title": "Student Fee Id"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Payment Date"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "amount",
                    "payment_method",
                    "id",
                    "student_fee_id",
                    "payment_date",
                    "created_at"
                ],
                "title": "PaymentInDB"
            },
            "PaymentMethodEnum": {
                "type": "string",
                "enum": [
                    "paystack",
                    "manual"
                ],
                "title": "PaymentMethodEnum"
            },
            "PaymentVerification": {
                "properties": {
                    "reference": {
                        "type": "string",
                        "title": "Reference"
                    }
                },
                "type": "object",
                "required": [
                    "reference"
                ],
                "title": "PaymentVerification"
            },
            "PaymentVerificationResponse": {
                "properties": {
                    "is_successful": {
                        "type": "boolean",
                        "title": "Is Successful"
                    },
                    "amount": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Amount"
                    },
                    "transaction_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Transaction Date"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "is_successful",
                    "message"
                ],
                "title": "PaymentVerificationResponse"
            },
            "PaystackPaymentInit": {
                "properties": {
                    "student_fee_id": {
                        "type": "integer",
                        "title": "Student Fee Id"
                    },
                    "amount": {
                        "anyOf": [
                            {
                                "type": "number",
                                "exclusiveMinimum": 0.0
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Amount"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "callback_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Callback Url"
                    }
                },
                "type": "object",
                "required": [
                    "student_fee_id",
                    "amount",
                    "email"
                ],
                "title": "PaystackPaymentInit"
            },
            "PaystackPaymentResponse": {
                "properties": {
                    "authorization_url": {
                        "type": "string",
                        "title": "Authorization Url"
                    },
                    "access_code": {
                        "type": "string",
                        "title": "Access Code"
                    },
                    "reference": {
                        "type": "string",
                        "title": "Reference"
                    }
                },
                "type": "object",
                "required": [
                    "authorization_url",
                    "access_code",
                    "reference"
                ],
                "title": "PaystackPaymentResponse"
            },
            "PendingUserResponse": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "full_name": {
                        "type": "string",
                        "title": "Full Name"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "full_name",
                    "email",
                    "status",
                    "created_at"
                ],
                "title": "PendingUserResponse"
            },
            "PermissionCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "PermissionCreate"
            },
            "PermissionInDB": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ],
                "title": "PermissionInDB"
            },
            "RegenerateCodeResponse": {
                "properties": {
                    "join_code": {
                        "type": "string",
                        "title": "Join Code"
                    },
                    "code_expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Code Expires At"
                    }
                },
                "type": "object",
                "required": [
                    "join_code",
                    "code_expires_at"
                ],
                "title": "RegenerateCodeResponse"
            },
            "ReportCard": {
                "properties": {
                    "student_id": {
                        "type": "integer",
                        "title": "Student Id"
                    },
                    "student_name": {
                        "type": "string",
                        "title": "Student Name"
                    },
                    "class_id": {
                        "type": "integer",
                        "title": "Class Id"
                    },
                    "class_name": {
                        "type": "string",
                        "title": "Class Name"
                    },
                    "term_id": {
                        "type": "integer",
                        "title": "Term Id"
                    },
                    "term_name": {
                        "type": "string",
                        "title": "Term Name"
                    },
                    "session_id": {
                        "type": "integer",
                        "title": "Session Id"
                    },
                    "session_name": {
                        "type": "string",
                        "title": "Session Name"
                    },
                    "subjects": {
                        "items": {
                            "$ref": "#/components/schemas/SubjectScore"
                        },
                        "type": "array",
                        "title": "Subjects"
                    },
                    "overall_average": {
                        "type": "number",
                        "title": "Overall Average"
                    },
                    "overall_grade": {
                        "type": "string",
                        "title": "Overall Grade"
                    },
                    "position": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Position"
                    },
                    "teacher_comment": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Teacher Comment"
                    },
                    "principal_comment": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Principal Comment"
                    }
                },
                "type": "object",
                "required": [
                    "student_id",
                    "student_name",
                    "class_id",
                    "class_name",
                    "term_id",
                    "term_name",
                    "session_id",
                    "session_name",
                    "subjects",
                    "overall_average",
                    "overall_grade"
                ],
                "title": "ReportCard"
            },
            "RoleCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "RoleCreate"
            },
            "RoleInDB": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ],
                "title": "RoleInDB"
            },
            "RoleUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    }
                },
                "type": "object",
                "title": "RoleUpdate"
            },
            "SchoolCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "abbreviation": {
                        "type": "string",
                        "title": "Abbreviation"
                    },
                    "address": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Address"
                    },
                    "phone": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone"
                    },
                    "email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "email"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Email"
                    },
                    "logo_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Logo Url"
                    },
                    "subscription_plan": {
                        "$ref": "#/components/schemas/SubscriptionPlanEnum",
                        "default": "free"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "abbreviation"
                ],
                "title": "SchoolCreate"
            },
            "SchoolInDB": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "abbreviation": {
                        "type": "string",
                        "title": "Abbreviation"
                    },
                    "address": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Address"
                    },
                    "phone": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone"
                    },
                    "email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "email"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Email"
                    },
                    "logo_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Logo Url"
                    },
                    "subscription_plan": {
                        "$ref": "#/components/schemas/SubscriptionPlanEnum",
                        "default": "free"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "abbreviation",
                    "id",
                    "created_at",
                    "updated_at"
                ],
                "title": "SchoolInDB"
            },
            "SchoolRegistration": {
                "properties": {
                    "school_name": {
                        "type": "string",
                        "title": "School Name"
                    },
                    "admin": {
                        "$ref": "#/components/schemas/AdminRegistration"
                    }
                },
                "type": "object",
                "required": [
                    "school_name",
                    "admin"
                ],
                "title": "SchoolRegistration"
            },
            "SchoolRegistrationResponse": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "join_code": {
                        "type": "string",
                        "title": "Join Code"
                    },
                    "code_expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Code Expires At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "join_code",
                    "code_expires_at"
                ],
                "title": "SchoolRegistrationResponse"
            },
            "SchoolUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "abbreviation": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Abbreviation"
                    },
                    "address": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Address"
                    },
                    "phone": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone"
                    },
                    "email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "email"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Email"
                    },
                    "logo_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Logo Url"
                    },
                    "subscription_plan": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SubscriptionPlanEnum"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "title": "SchoolUpdate"
            },
            "StudentAssessmentScoreCreate": {
                "properties": {
                    "score": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Score"
                    },
                    "student_id": {
                        "type": "integer",
                        "title": "Student Id"
                    },
                    "assessment_id": {
                        "type": "integer",
                        "title": "Assessment Id"
                    },
                    "subject_id": {
                        "type": "integer",
                        "title": "Subject Id"
                    }
                },
                "type": "object",
                "required": [
                    "score",
                    "student_id",
                    "assessment_id",
                    "subject_id"
                ],
                "title": "StudentAssessmentScoreCreate"
            },
            "StudentAssessmentScoreInDB": {
                "properties": {
                    "score": {
                        "type": "string",
                        "title": "Score"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "student_id": {
                        "type": "integer",
                        "title": "Student Id"
                    },
                    "assessment_id": {
                        "type": "integer",
                        "title": "Assessment Id"
                    },
                    "subject_id": {
                        "type": "integer",
                        "title": "Subject Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "score",
                    "id",
                    "student_id",
                    "assessment_id",
                    "subject_id",
                    "created_at"
                ],
                "title": "StudentAssessmentScoreInDB"
            },
            "StudentAssessmentScoreUpdate": {
                "properties": {
                    "score": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Score"
                    }
                },
                "type": "object",
                "required": [
                    "score"
                ],
                "title": "StudentAssessmentScoreUpdate"
            },
            "StudentCustomFieldCreate": {
                "properties": {
                    "field_key": {
                        "type": "string",
                        "title": "Field Key"
                    },
                    "field_value": {
                        "type": "string",
                        "title": "Field Value"
                    }
                },
                "type": "object",
                "required": [
                    "field_key",
                    "field_value"
                ],
                "title": "StudentCustomFieldCreate"
            },
            "StudentCustomFieldResponse": {
                "properties": {
                    "field_key": {
                        "type": "string",
                        "title": "Field Key"
                    },
                    "field_value": {
                        "type": "string",
                        "title": "Field Value"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "student_id": {
                        "type": "integer",
                        "title": "Student Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "field_key",
                    "field_value",
                    "id",
                    "student_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "StudentCustomFieldResponse"
            },
            "StudentCustomFieldUpdate": {
                "properties": {
                    "field_key": {
                        "type": "string",
                        "title": "Field Key"
                    },
                    "field_value": {
                        "type": "string",
                        "title": "Field Value"
                    }
                },
                "type": "object",
                "required": [
                    "field_key",
                    "field_value"
                ],
                "title": "StudentCustomFieldUpdate"
            },
            "StudentFeeCreate": {
                "properties": {
                    "amount_due": {
                        "anyOf": [
                            {
                                "type": "number",
                                "exclusiveMinimum": 0.0
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Amount Due"
                    },
                    "amount_paid": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Amount Paid",
                        "default": 0
                    },
                    "status": {
                        "$ref": "#/components/schemas/FeeStatusEnum",
                        "default": "pending"
                    },
                    "due_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Due Date"
                    },
                    "student_id": {
                        "type": "integer",
                        "title": "Student Id"
                    },
                    "fee_type_id": {
                        "type": "integer",
                        "title": "Fee Type Id"
                    }
                },
                "type": "object",
                "required": [
                    "amount_due",
                    "student_id",
                    "fee_type_id"
                ],
                "title": "StudentFeeCreate"
            },
            "StudentFeeInDB": {
                "properties": {
                    "amount_due": {
                        "type": "string",
                        "title": "Amount Due"
                    },
                    "amount_paid": {
                        "type": "string",
                        "title": "Amount Paid",
                        "default": 0
                    },
                    "status": {
                        "$ref": "#/components/schemas/FeeStatusEnum",
                        "default": "pending"
                    },
                    "due_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Due Date"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "student_id": {
                        "type": "integer",
                        "title": "Student Id"
                    },
                    "fee_type_id": {
                        "type": "integer",
                        "title": "Fee Type Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "amount_due",
                    "id",
                    "student_id",
                    "fee_type_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "StudentFeeInDB"
            },
            "StudentFeeUpdate": {
                "properties": {
                    "amount_due": {
                        "anyOf": [
                            {
                                "type": "number",
                                "exclusiveMinimum": 0.0
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Amount Due"
                    },
                    "amount_paid": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Amount Paid"
                    },
                    "status": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/FeeStatusEnum"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "due_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Due Date"
                    }
                },
                "type": "object",
                "title": "StudentFeeUpdate"
            },
            "StudentResponse": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "user_id": {
                        "type": "integer",
                        "title": "User Id"
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    },
                    "admission_number": {
                        "type": "string",
                        "title": "Admission Number"
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date Of Birth"
                    },
                    "gender": {
                        "type": "string",
                        "title": "Gender"
                    },
                    "class_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Class Id"
                    },
                    "department_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Department Id"
                    },
                    "session_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Session Id"
                    },
                    "photo_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Photo Url"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "user_id",
                    "school_id",
                    "admission_number",
                    "date_of_birth",
                    "gender",
                    "created_at",
                    "updated_at"
                ],
                "title": "StudentResponse"
            },
            "StudentUpdate": {
                "properties": {
                    "admission_number": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Admission Number"
                    },
                    "date_of_birth": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Date Of Birth"
                    },
                    "gender": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Gender"
                    },
                    "class_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Class Id"
                    },
                    "department_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Department Id"
                    },
                    "session_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Session Id"
                    },
                    "photo_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Photo Url"
                    }
                },
                "type": "object",
                "title": "StudentUpdate"
            },
            "StudentWithUser": {
                "properties": {
                    "admission_number": {
                        "type": "string",
                        "title": "Admission Number"
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date Of Birth"
                    },
                    "gender": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Gender"
                    },
                    "class_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Class Id"
                    },
                    "department_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Department Id"
                    },
                    "session_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Session Id"
                    },
                    "photo_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Photo Url"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "user_id": {
                        "type": "integer",
                        "title": "User Id"
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserInDB"
                    }
                },
                "type": "object",
                "required": [
                    "admission_number",
                    "date_of_birth",
                    "id",
                    "user_id",
                    "school_id",
                    "created_at",
                    "updated_at",
                    "user"
                ],
                "title": "StudentWithUser"
            },
            "SubjectCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "department_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Department Id"
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "school_id"
                ],
                "title": "SubjectCreate"
            },
            "SubjectInDB": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "department_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Department Id"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "school_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "SubjectInDB"
            },
            "SubjectScore": {
                "properties": {
                    "subject_id": {
                        "type": "integer",
                        "title": "Subject Id"
                    },
                    "subject_name": {
                        "type": "string",
                        "title": "Subject Name"
                    },
                    "scores": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Scores"
                    },
                    "total": {
                        "type": "number",
                        "title": "Total"
                    },
                    "average": {
                        "type": "number",
                        "title": "Average"
                    },
                    "grade": {
                        "type": "string",
                        "title": "Grade"
                    }
                },
                "type": "object",
                "required": [
                    "subject_id",
                    "subject_name",
                    "scores",
                    "total",
                    "average",
                    "grade"
                ],
                "title": "SubjectScore"
            },
            "SubjectUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "department_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Department Id"
                    }
                },
                "type": "object",
                "title": "SubjectUpdate"
            },
            "SubscriptionPlanEnum": {
                "type": "string",
                "enum": [
                    "free",
                    "premium",
                    "enterprise"
                ],
                "title": "SubscriptionPlanEnum"
            },
            "TeacherSubjectClassCreate": {
                "properties": {
                    "teacher_user_id": {
                        "type": "integer",
                        "title": "Teacher User Id"
                    },
                    "subject_id": {
                        "type": "integer",
                        "title": "Subject Id"
                    },
                    "class_id": {
                        "type": "integer",
                        "title": "Class Id"
                    }
                },
                "type": "object",
                "required": [
                    "teacher_user_id",
                    "subject_id",
                    "class_id"
                ],
                "title": "TeacherSubjectClassCreate"
            },
            "TeacherSubjectClassInDB": {
                "properties": {
                    "teacher_user_id": {
                        "type": "integer",
                        "title": "Teacher User Id"
                    },
                    "subject_id": {
                        "type": "integer",
                        "title": "Subject Id"
                    },
                    "class_id": {
                        "type": "integer",
                        "title": "Class Id"
                    }
                },
                "type": "object",
                "required": [
                    "teacher_user_id",
                    "subject_id",
                    "class_id"
                ],
                "title": "TeacherSubjectClassInDB"
            },
            "TermCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "start_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Start Date"
                    },
                    "end_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "End Date"
                    },
                    "session_id": {
                        "type": "integer",
                        "title": "Session Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "session_id"
                ],
                "title": "TermCreate"
            },
            "TermInDB": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "start_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Start Date"
                    },
                    "end_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "End Date"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "session_id": {
                        "type": "integer",
                        "title": "Session Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "session_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "TermInDB"
            },
            "TermUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "start_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Start Date"
                    },
                    "end_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "End Date"
                    }
                },
                "type": "object",
                "title": "TermUpdate"
            },
            "Token": {
                "properties": {
                    "access_token": {
                        "type": "string",
                        "title": "Access Token"
                    },
                    "token_type": {
                        "type": "string",
                        "title": "Token Type"
                    },
                    "user_id": {
                        "type": "integer",
                        "title": "User Id"
                    },
                    "role": {
                        "type": "string",
                        "title": "Role"
                    }
                },
                "type": "object",
                "required": [
                    "access_token",
                    "token_type",
                    "user_id",
                    "role"
                ],
                "title": "Token"
            },
            "UserApprovalAction": {
                "properties": {
                    "action": {
                        "type": "string",
                        "pattern": "^(approve|reject)$",
                        "title": "Action"
                    }
                },
                "type": "object",
                "required": [
                    "action"
                ],
                "title": "UserApprovalAction"
            },
            "UserCreate": {
                "properties": {
                    "full_name": {
                        "type": "string",
                        "title": "Full Name"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "phone": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone"
                    },
                    "profile_photo_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profile Photo Url"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8,
                        "title": "Password"
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    },
                    "role_id": {
                        "type": "integer",
                        "title": "Role Id"
                    }
                },
                "type": "object",
                "required": [
                    "full_name",
                    "email",
                    "password",
                    "school_id",
                    "role_id"
                ],
                "title": "UserCreate"
            },
            "UserInDB": {
                "properties": {
                    "full_name": {
                        "type": "string",
                        "title": "Full Name"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "phone": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone"
                    },
                    "profile_photo_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profile Photo Url"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    },
                    "role_id": {
                        "type": "integer",
                        "title": "Role Id"
                    },
                    "is_email_verified": {
                        "type": "boolean",
                        "title": "Is Email Verified"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "full_name",
                    "email",
                    "id",
                    "school_id",
                    "role_id",
                    "is_email_verified",
                    "created_at",
                    "updated_at"
                ],
                "title": "UserInDB"
            },
            "UserUpdate": {
                "properties": {
                    "full_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Full Name"
                    },
                    "email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "email"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Email"
                    },
                    "phone": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone"
                    },
                    "profile_photo_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profile Photo Url"
                    },
                    "role_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Role Id"
                    }
                },
                "type": "object",
                "title": "UserUpdate"
            },
            "UserWithRole": {
                "properties": {
                    "full_name": {
                        "type": "string",
                        "title": "Full Name"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "phone": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone"
                    },
                    "profile_photo_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profile Photo Url"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "school_id": {
                        "type": "integer",
                        "title": "School Id"
                    },
                    "role_id": {
                        "type": "integer",
                        "title": "Role Id"
                    },
                    "is_email_verified": {
                        "type": "boolean",
                        "title": "Is Email Verified"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleInDB"
                    }
                },
                "type": "object",
                "required": [
                    "full_name",
                    "email",
                    "id",
                    "school_id",
                    "role_id",
                    "is_email_verified",
                    "created_at",
                    "updated_at",
                    "role"
                ],
                "title": "UserWithRole"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        },
        "securitySchemes": {
            "OAuth2PasswordBearer": {
                "type": "oauth2",
                "flows": {
                    "password": {
                        "scopes": {},
                        "tokenUrl": "/api/auth/login"
                    }
                }
            }
        }
    }
}